export class Widget{constructor(t){this.el=document.createElement(t&&t.element?t.element:"div"),this.styleFn={},this.defineStyles=this.defineStyles.bind(this),this.setState=this.setState.bind(this),this.create=this.create.bind(this),this.flush=this.flush.bind(this),this.build=this.build.bind(this),this.children=this.build.bind(this),this.applyCSS=this.applyCSS.bind(this),this.context=this,this.parent={},this.__=this.build,t&&t.css&&(this.css=t.css),t&&t.style&&this.defineStyles(t.style),t&&t.builder&&(this.render=t.builder)}applyCSS(){if(this.css){console.log("Apply css called");const t=this.css(this),e=document.createElement("style"),s=document.createAttribute("scoped");e.setAttributeNode(s),e.appendChild(document.createTextNode(t)),this.el.appendChild(e)}}defineStyles(t){this.styleFn=t;let e="function"==typeof t?t(this):t;Object.keys(e).forEach(t=>this.el.style[t]=e[t])}applyStyles(){const t="function"==typeof this.style?f(this):this.style;Object.keys(t).forEach(e=>this.el.style[e]=t[e])}attachTo(t){this.parent=t}setState(t){t(this),this.render(this)}create(){this.render&&this.render(this)}dispose(){this.flush()}flush(){for(;this.el.firstChild;)this.el.removeChild(this.el.lastChild)}getParent(){return this.el.parentElement?this.el.parentElement:document.getElementById("myapp")}init(){this.getParent().appendChild(this.el),this.defineStyles(this.styleFn)}build(t){this.flush(),this.init();let e=this;t.forEach(t=>{t&&t.el&&e.el.appendChild(t.el)}),this.applyCSS()}}